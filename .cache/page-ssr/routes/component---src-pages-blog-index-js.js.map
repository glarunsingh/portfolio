{"version":3,"file":"component---src-pages-blog-index-js.js","mappings":";;;;;;;;;;;;;;;;;;;AAEO,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CACnC,KAAM,CAAAC,IAAI,CAAGF,uCAAc,aAU1B,CAAC,CAEF,MAAO,CAAAE,IAAI,CAACC,IAAI,CAACC,YAAY,CAC/B,CAAC;;ACbD,KAAM,CAAAE,GAAG,CAAGA,CAAC,CAAEC,KAAK,CAAEC,WAAW,CAAEC,QAAQ,CAAEC,QAAS,CAAC,GAAK,CAE1D,KAAM,CAAEH,KAAK,CAAEI,SAAS,CAAEH,WAAW,CAAEI,eAAe,CAAEC,OAAQ,CAAC,CAAGZ,eAAe,CAAC,CAAC,CAErF,KAAM,CAAAa,GAAG,CAAG,CACVP,KAAK,CAAEA,KAAK,CACZC,WAAW,CAAEA,WAAW,EAAII,eAAe,CAC3CG,GAAG,CAAE,GAAGF,OAAO,GAAGJ,QAAQ,EAAI,EAAE,EAClC,CAAC,CAED,mBACEJ,oGAAA,CAAAA,+FAAA,mBACEA,oGAAA,cAAQS,GAAG,CAACP,KAAK,CAAC,KAAG,CAACI,SAAiB,CAAC,cACxCN,oGAAA,SAAMa,IAAI,CAAC,aAAa,CAACC,OAAO,CAAEL,GAAG,CAACN,WAAY,CAAE,CAAC,CACpDE,QACD,CAAC,CAEP,CAAC,CAED,0CAAeJ,GAAG;;;;;;;;;;;;;;;;ACjBlB,KAAM,CAAAe,QAAQ,CAAGA,CAAC,CAACnB,IAAI,CAAC,GAAK,CAC3B,mBACEG,gDAAA,QAAKiB,SAAS,CAAC,MAAM,eACnBjB,gDAAA,OAAIkB,SAAS,CAAC,yBAAyB,EAAC,MAAQ,CAAC,cACjDlB,gDAAA,MAAGkB,SAAS,CAAC,MAAM,EAAC,uDAAwD,CAAC,CAE3ErB,IAAI,CAACsB,MAAM,CAACC,KAAK,CAACC,GAAG,CAAEC,IAAI,eACzBtB,gDAAA,YAASuB,GAAG,CAAED,IAAI,CAACE,EAAG,CAACN,SAAS,CAAC,MAAM,eACrClB,gDAAA,OAAIkB,SAAS,CAAC,uBAAuB,eACnClB,gDAAA,CAACe,wCAAI,EAACU,EAAE,CAAE,SAASH,IAAI,CAACI,WAAW,CAACC,IAAI,EAAG,CAACT,SAAS,CAAC,iBAAiB,EACpEI,IAAI,CAACI,WAAW,CAACxB,KACd,CACJ,CAAC,cACLF,gDAAA,MAAGkB,SAAS,CAAC,cAAc,EAAEI,IAAI,CAACI,WAAW,CAACE,IAAQ,CAAC,cACvD5B,gDAAA,UAAIsB,IAAI,CAACO,OAAW,CACb,CACV,CAEA,CAAC,CAEV,CAAC,CAEM,KAAM,CAAAC,KAAK,aAcjB,CAEM,KAAM,CAAAC,IAAI,CAAGA,CAAA,gBAAM/B,gDAAA,CAACC,gEAAG,EAACC,KAAK,CAAC,MAAM,CAACC,WAAW,CAAC,UAAU,CAACC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAErF,iEAAeY,QAAQ","sources":["webpack://elegant-portfolio/./src/hooks/use-site-metadata.jsx","webpack://elegant-portfolio/./src/components/seo.js","webpack://elegant-portfolio/./src/pages/blog/index.js"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\r\n\r\nexport const useSiteMetadata = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          description\r\n          siteUrl\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return data.site.siteMetadata\r\n}","import * as React from 'react'\r\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\";\r\n\r\nconst Seo = ({ title, description, pathname, children }) => {\r\n\r\n  const { title: siteTitle, description: siteDescription, siteUrl } = useSiteMetadata()\r\n\r\n  const seo = {\r\n    title: title,\r\n    description: description || siteDescription,\r\n    url: `${siteUrl}${pathname || ``}`,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <title>{seo.title} | {siteTitle}</title>\r\n      <meta name=\"description\" content={seo.description} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo","import * as React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { Link } from 'gatsby';\r\nimport Seo from '../../components/seo'\r\n\r\nconst BlogPage = ({data}) => {\r\n  return (\r\n    <div pageTitle='Blog'>\r\n      <h1 className=\"text-3xl font-bold my-4\">Blog</h1>\r\n      <p className='mb-2'>This is a blog. Don't hesitate to check the articles.</p>\r\n      {\r\n        data.allMdx.nodes.map((node) => (\r\n          <article key={node.id} className='mb-4'>\r\n            <h2 className='text-lg font-semibold'>\r\n              <Link to={`/blog/${node.frontmatter.slug}`} className='hover:underline'>\r\n                {node.frontmatter.title}\r\n              </Link>\r\n            </h2>\r\n            <p className='text-sm mb-1'>{node.frontmatter.date}</p>\r\n            <p>{node.excerpt}</p>\r\n          </article>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMdx(sort: { frontmatter: { date: DESC }}) {\r\n      nodes {\r\n        frontmatter {\r\n          date(formatString: \"MMMM D, YYYY\")\r\n          title\r\n          slug\r\n        }\r\n        id\r\n        excerpt\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const Head = () => <Seo title='Blog' description='My blog.' pathname='/blog'/>\r\n\r\nexport default BlogPage"],"names":["useStaticQuery","useSiteMetadata","data","site","siteMetadata","React","Seo","title","description","pathname","children","siteTitle","siteDescription","siteUrl","seo","url","createElement","Fragment","name","content","Link","BlogPage","pageTitle","className","allMdx","nodes","map","node","key","id","to","frontmatter","slug","date","excerpt","query","Head"],"sourceRoot":""}